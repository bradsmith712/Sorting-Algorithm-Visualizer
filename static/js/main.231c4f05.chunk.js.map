{"version":3,"sources":["reducers/index.tsx","SortingVisualizer/Bar.tsx","SortingVisualizer/VizContainer.tsx","SortingAlgorithms/index.tsx","Header/header.tsx","App.tsx","serviceWorker.ts","store.tsx","index.tsx"],"names":["compare","compareIdxArr","type","payload","swapStart","swapIdxArr","swapEnd","newArr","setIsSorting","isSorting","console","log","defaultState","array","swapped","compared","arraySize","sortSpeed","algorithm","reducer","state","action","Bar","props","value","index","isCompared","barColor","isSwapped","className","key","style","backgroundColor","height","VizContainer","useSelector","dispatch","useDispatch","useEffect","min","max","randomArr","i","push","Math","floor","random","generateArray","setNewArray","map","idx","includes","a","quickSortHelper","length","startIdx","endIdx","pivotIdx","leftIdx","rightIdx","wait","swap","arrayClone","j","temp","actionHandler","actionArr","ms","Promise","resolve","setTimeout","useStyles","makeStyles","grow","appContainer","display","flexDirection","justifyContent","padding","title","alignItems","minWidth","modifiers","width","sliderContainer","marginRight","slider","selectCont","select","color","icon","Header","useState","sliderVal","setSliderVal","classes","AppBar","position","Typography","variant","Slider","aria-label","onChange","evt","handleSizeSlider","defaultValue","speed","setSortSpeed","handleSpeedSlider","Select","target","setAlgorithm","MenuItem","Button","size","onClick","arrayCopy","isSorted","counter","bubbleSort","arrClone","insertionSort","lowestIdx","swapIdx","selectionSort","quickSort","disabled","App","Boolean","window","location","hostname","match","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.231c4f05.chunk.js","sourcesContent":["// ACTION TYPES\nconst GENERATE_NEW_ARRAY = 'GENERATE_NEW_ARRAY';\nconst COMPARE = 'COMPARE';\nconst SWAP_START = 'SWAP_START';\nconst SWAP_END = 'SWAP_END';\nconst SLEEP = 'SLEEP';\nconst SET_ARRAY_SIZE = 'SET_ARRAY_SIZE';\nconst SET_SORT_SPEED = 'SET_SORT_SPEED';\nconst SET_ALGORITHM = 'SET_ALGORITHM';\nconst IS_SORTING = 'IS_SORTING';\n\n// ACTION CREATORS\nexport const setNewArray = (array: number[]) => {\n  return {\n    type: GENERATE_NEW_ARRAY,\n    payload: array\n  }\n}\n\nexport const setArraySize = (size: number) => {\n  return {\n    type: SET_ARRAY_SIZE,\n    payload: size\n  }\n}\n\nexport const setSortSpeed = (speed: number) => {\n  return {\n    type: SET_SORT_SPEED,\n    payload: speed\n  }\n}\n\nexport const setAlgorithm = (algorithm: string) => {\n  return {\n    type: SET_ALGORITHM,\n    payload: algorithm\n  }\n}\n\nexport const compare = (compareIdxArr: number[]) => {\n  return {\n    type: COMPARE,\n    payload: compareIdxArr\n  }\n}\n\nexport const swapStart = (swapIdxArr: number[]) => {\n  return {\n    type: SWAP_START,\n    payload: swapIdxArr\n  }\n}\n\nexport const swapEnd = (newArr: number[]) => {\n  return {\n    type: SWAP_END,\n    payload: newArr\n  }\n}\n\nexport const sleep = () => {\n  return {\n    type: SLEEP\n  }\n}\n\nexport const setIsSorting = (isSorting: boolean) => {\n  console.log('setIsSorting = ', isSorting)\n  return {\n    type: IS_SORTING,\n    payload: isSorting\n  }\n}\n\n// ---------------------------- SEPARATE FILE\n\n// INITIAL STATE\nconst defaultState = {\n  array: [],\n  swapped: [],\n  compared: [],\n  arraySize: 50,\n  sortSpeed: 50,\n  algorithm: 'Bubble Sort',\n  isSorting: false\n}\n\n// REDUCER\nconst reducer = (state = defaultState, action: any) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GENERATE_NEW_ARRAY:\n      return {\n        ...state,\n        array: payload,\n        swapped: [],\n        compared: []\n      }\n    case COMPARE:\n      return {\n        ...state,\n        compared: payload,\n        swapped: []\n      }\n    case SWAP_START:\n      return {\n        ...state,\n        compared: [],\n        swapped: payload\n      }\n    case SWAP_END:\n      return {\n        ...state,\n        array: payload\n      }\n    case SLEEP:\n      return {\n        ...state,\n        swapped: [],\n        compared: []\n      }\n    case SET_ARRAY_SIZE: {\n      return {\n        ...state,\n        arraySize: payload\n      }\n    }\n    case SET_SORT_SPEED: {\n      return {\n        ...state,\n        sortSpeed: payload\n      }\n    }\n    case SET_ALGORITHM: {\n      return {\n        ...state,\n        algorithm: payload\n      }\n    }\n    case IS_SORTING: {\n      return {\n        ...state,\n        isSorting: payload\n      }\n    }\n    default:\n      return state\n  }\n}\nexport default reducer;\n","import * as React from 'react';\n\ninterface IProps {\n  value: number;\n  index: number;\n  isCompared: Boolean;\n  isSwapped: Boolean;\n}\n\nconst Bar: React.FC<IProps> = (props: IProps) => {\n  const { value, index, isCompared, isSwapped } = props;\n\n  let barColor = '#3f51b5';\n\n  if (isSwapped) {\n    // barColor = 'green';\n    barColor = '#4caf50';\n  }\n\n  if (isCompared) {\n    barColor = '#f50057';\n  }\n\n  return (\n    <div className=\"viz-bar\" key={index} style={{\n      backgroundColor: barColor,\n      height: `${value}px`,\n    }}>\n    </div>\n  )\n}\n\nexport default Bar;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setNewArray, swapStart } from '../reducers';\nimport generateRandomArray from '../utils/generateRandomArray';\n\nimport './VizContainer.css';\nimport Bar from './Bar';\nimport { bubbleSort, insertionSort, selectionSort, quickSort } from '../SortingAlgorithms';\n// import connect from 'react-redux/es/connect/connect';\n// import { connect } from 'react-redux';\n\nconst NUMBER_OF_ARRAY_BARS = 15;\n\ninterface IState {\n  array: number[];\n  compared: number[];\n  swapped: number[];\n  arraySize: number;\n  sortSpeed: number;\n  algorithm: string;\n  isSorting: boolean;\n}\n\nfunction VizContainer() {\n  const array = useSelector((state: IState) => state.array);\n  const compared = useSelector((state: IState) => state.compared);\n  const swapped = useSelector((state: IState) => state.swapped);\n  const arraySize = useSelector((state: IState) => state.arraySize);\n  const sortSpeed = useSelector((state: IState) => state.sortSpeed);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function generateArray(arraySize: number) {\n      const randomArr = [];\n      for (let i = 0; i < arraySize; i++) {\n        randomArr.push(randomIntFromInterval(100, 650))\n      }\n      return randomArr;\n    }\n\n    const array = generateArray(arraySize);\n\n    dispatch(setNewArray(array));\n  }, [arraySize]);\n\n  return (\n    <div className=\"viz-container\">\n      {array.map((value: number, idx: number) => {\n        const isSwapped = swapped.includes(idx);\n        const isCompared = compared.includes(idx);\n        return <Bar value={value} key={idx} index={idx} isSwapped={isSwapped} isCompared={isCompared} />\n      })}\n    </div>\n  )\n}\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default VizContainer;\n","import React from 'react';\nimport { compare, swapStart, swapEnd, sleep, setIsSorting } from '../reducers';\n\nexport function bubbleSort(array: number[], dispatch: any, sortSpeed: number): void {\n  const actionArr = [];\n  let isSorted = false;\n  let counter = 0;\n\n  const arrayCopy = [...array];\n\n  while (!isSorted) {\n    isSorted = true;\n    for (let i = 0; i < arrayCopy.length - 1 - counter; i++) {\n      actionArr.push({ type: 'compare', compared: [i, i + 1] })\n      if (arrayCopy[i] > arrayCopy[i + 1]) {\n        actionArr.push({ type: 'swapStart', swapped: [i, i + 1] });\n        let temp = arrayCopy[i + 1];\n        arrayCopy[i + 1] = arrayCopy[i];\n        arrayCopy[i] = temp;\n        isSorted = false;\n        const arrayClone = [...arrayCopy];\n        actionArr.push({ type: 'swapEnd', swapped: [i, i + 1], array: arrayClone });\n      }\n      actionArr.push({ type: 'sleep' })\n    }\n    counter++;\n  }\n\n  actionHandler(actionArr, dispatch, sortSpeed);\n}\n\nexport function insertionSort(array: number[], dispatch: any, sortSpeed: number) {\n  const actionArr = [];\n  const arrayCopy = [...array];\n\n  for (let i = 1; i < arrayCopy.length; i++) {\n    let j = i;\n    actionArr.push({ type: 'compare', compared: [j, j - 1] })\n    while (j > 0 && arrayCopy[j] < arrayCopy[j - 1]) {\n      actionArr.push({ type: 'swapStart', swapped: [j, j - 1] })\n      let temp = arrayCopy[j];\n      arrayCopy[j] = arrayCopy[j - 1];\n      arrayCopy[j - 1] = temp;\n      const arrClone = [...arrayCopy];\n      actionArr.push({ type: 'swapEnd', array: arrClone });\n      // actionArr.push({ type: 'sleep' });\n      j -= 1;\n      if (j > 0) {\n        actionArr.push({ type: 'compare', compared: [j, j - 1] })\n      }\n    }\n    actionArr.push({ type: 'sleep' });\n  }\n\n  actionHandler(actionArr, dispatch, sortSpeed);\n}\n\nexport function selectionSort(array: number[], dispatch: any, sortSpeed: number) {\n  const actionArr = [];\n  const arrayCopy = [...array];\n\n  for (let i = 0; i < arrayCopy.length - 1; i++) {\n    let lowestIdx = i;\n    let swapIdx = i;\n    for (let j = swapIdx + 1; j < arrayCopy.length; j++) {\n      actionArr.push({ type: 'compare', compared: [j, lowestIdx] })\n      if (arrayCopy[lowestIdx] > arrayCopy[j]) {\n        lowestIdx = j;\n      }\n      actionArr.push({ type: 'sleep' });\n    }\n    actionArr.push({ type: 'swapStart', swapped: [swapIdx, lowestIdx] });\n    let temp = arrayCopy[swapIdx];\n    arrayCopy[swapIdx] = arrayCopy[lowestIdx];\n    arrayCopy[lowestIdx] = temp;\n    const arrClone = [...arrayCopy];\n    actionArr.push({ type: 'swapEnd', array: arrClone });\n    actionArr.push({ type: 'sleep' });\n  }\n\n  actionHandler(actionArr, dispatch, sortSpeed);\n}\n\nexport async function quickSort(array: number[], dispatch: any, sortSpeed: number) {\n  await quickSortHelper(array, 0, array.length - 1, dispatch, sortSpeed);\n  dispatch(sleep());\n  dispatch(setIsSorting(false));\n}\n\nasync function quickSortHelper(array: number[], startIdx: number, endIdx: number, dispatch: any, sortSpeed: number) {\n  if (startIdx >= endIdx) return;\n\n  const pivotIdx = startIdx;\n  let leftIdx = startIdx + 1;\n  let rightIdx = endIdx;\n\n  while (rightIdx >= leftIdx) {\n    // actionArr.push({ type: 'compare', compared: [pivotIdx, leftIdx, rightIdx] })\n    dispatch(compare([pivotIdx, leftIdx, rightIdx]));\n    await wait(sortSpeed);\n    if (array[leftIdx] > array[pivotIdx] && array[rightIdx] < array[pivotIdx]) {\n      // actionArr.push({ type: 'swapStart', swapped: [leftIdx, rightIdx] });\n      dispatch(swapStart([leftIdx, rightIdx]));\n      await wait(sortSpeed);\n      swap(leftIdx, rightIdx, array);\n      const arrayClone = [...array];\n      // actionArr.push({ type: 'swapEnd', array: arrClone });\n      dispatch(swapEnd(arrayClone));\n      await wait(sortSpeed);\n    }\n    if (array[leftIdx] <= array[pivotIdx]) {\n      leftIdx++;\n    }\n\n    if (array[rightIdx] >= array[pivotIdx]) {\n      rightIdx--;\n    }\n  }\n  // actionArr.push({ type: 'swapStart', swapped: [pivotIdx, rightIdx] });\n  dispatch(swapStart([leftIdx, rightIdx]));\n  await wait(sortSpeed);\n  swap(pivotIdx, rightIdx, array);\n  const arrayClone = [...array];\n  dispatch(swapEnd(arrayClone));\n  await wait(sortSpeed);\n  // actionArr.push({ type: 'swapEnd', array: arrClone });\n\n  const isLeftSubSmaller = rightIdx - 1 - startIdx < endIdx - (rightIdx + 1);\n  if (isLeftSubSmaller) {\n    await quickSortHelper(array, rightIdx + 1, endIdx, dispatch, sortSpeed);\n    await quickSortHelper(array, startIdx, rightIdx - 1, dispatch, sortSpeed);\n  } else {\n    await quickSortHelper(array, rightIdx + 1, endIdx, dispatch, sortSpeed);\n    await quickSortHelper(array, startIdx, rightIdx - 1, dispatch, sortSpeed);\n  }\n}\n\nfunction swap(i: number, j: number, array: number[]) {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n}\n\nasync function actionHandler(actionArr: any, dispatch: any, sortSpeed: number) {\n  for (let i = 0; i < actionArr.length; i++) {\n    console.log('action = ', actionArr[i]);\n    const action = actionArr[i];\n    const { type } = action;\n    if (type === 'compare') {\n      dispatch(compare(action.compared));\n    } else if (type === 'swapStart') {\n      dispatch(swapStart(action.swapped))\n    } else if (type === 'swapEnd') {\n      dispatch(swapEnd(action.array));\n    } else if (type === 'sleep') {\n      dispatch(sleep());\n    }\n    await wait(sortSpeed);\n  }\n  dispatch(setIsSorting(false));\n}\n\nfunction wait(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppBar, Typography, Button, Slider, Select, MenuItem } from '@material-ui/core';\nimport { withStyles, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { white } from 'color-name';\nimport { setArraySize, setSortSpeed, setAlgorithm, setIsSorting } from '../reducers';\nimport { bubbleSort, insertionSort, selectionSort, quickSort } from '../SortingAlgorithms';\n\nimport './header.css';\n\nconst useStyles = makeStyles({\n  grow: {\n    // flexGrow: 1,\n    // backgroundColor: 'white'\n  },\n  appContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: '70px',\n    padding: '10px'\n  },\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    minWidth: '200px',\n  },\n  modifiers: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n  },\n  sliderContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    marginRight: '50px'\n  },\n  slider: {\n    width: '125px',\n    // marginLeft: '50px',\n  },\n  selectCont: {\n    width: '200px',\n  },\n  select: {\n    color: 'white',\n    // backgroundColor: 'white'\n  },\n  icon: {\n    color: 'white'\n  }\n})\n\ninterface IState {\n  array: number[];\n  compared: number[];\n  swapped: number[];\n  arraySize: number;\n  sortSpeed: number;\n  algorithm: string;\n  isSorting: boolean;\n}\n\nfunction Header() {\n  const arraySize = useSelector((state: IState) => state.arraySize);\n  const sortSpeed = useSelector((state: IState) => state.sortSpeed);\n  const algorithm = useSelector((state: IState) => state.algorithm);\n  const array = useSelector((state: IState) => state.array);\n  const isSorting = useSelector((state: IState) => state.isSorting);\n\n  const [sliderVal, setSliderVal] = useState(50);\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  function handleSizeSlider(evt: any, value: number) {\n    dispatch(setArraySize(value));\n  }\n\n  function handleSpeedSlider(evt: any, value: number) {\n    setSliderVal(value);\n    // use slope of line equation to calculate speed in ms of sort\n    const speed = Math.floor(-29.97 * value + 3000);\n    dispatch(setSortSpeed(speed));\n  }\n\n  function handleSelectChange(evt: React.ChangeEvent<{ value: unknown }>) {\n    const algorithm = evt.target.value as string;\n    dispatch(setAlgorithm(algorithm));\n  }\n\n  function handleSort() {\n    const arrayCopy = [...array];\n    switch (algorithm) {\n      case 'Bubble Sort':\n        bubbleSort(arrayCopy, dispatch, sortSpeed);\n        break;\n      case 'Insertion Sort':\n        insertionSort(arrayCopy, dispatch, sortSpeed);\n        break;\n      case 'Selection Sort':\n        selectionSort(arrayCopy, dispatch, sortSpeed);\n        break;\n      case 'Quick Sort':\n        quickSort(arrayCopy, dispatch, sortSpeed);\n        break;\n    }\n\n    dispatch(setIsSorting(true));\n  }\n\n  return (\n    // <div className={classes.grow}>\n    <AppBar position=\"static\" className={classes.appContainer}>\n      {/* <div className={classes.appContainer}> */}\n      <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n        Sorting Visualizer\n        </Typography>\n      <div className={classes.modifiers}>\n        <div className={classes.sliderContainer}>\n          <Typography>\n            Array Size\n          </Typography>\n          <div className={classes.slider}>\n            <Slider\n              aria-label=\"Array Size\"\n              value={arraySize}\n              onChange={(evt: any, value: any) => handleSizeSlider(evt, value)}\n              min={4}\n              max={100}\n              defaultValue={50}\n              color=\"secondary\"\n            />\n          </div>\n        </div>\n        <div className={classes.sliderContainer}>\n          <Typography>\n            Sort Speed\n          </Typography>\n          <div className={classes.slider}>\n            <Slider\n              aria-label=\"Sort Speed\"\n              value={sliderVal}\n              onChange={(evt: any, value: any) => handleSpeedSlider(evt, value)}\n              min={1}\n              max={100}\n              defaultValue={50}\n              color=\"secondary\"\n            />\n          </div>\n        </div>\n        <div className={classes.selectCont}>\n          <Select value={algorithm} onChange={handleSelectChange} variant=\"standard\" classes={{\n            select: classes.select,\n            icon: classes.icon\n          }}>\n            <MenuItem value=\"Bubble Sort\">Bubble Sort</MenuItem>\n            <MenuItem value=\"Insertion Sort\">Insertion Sort</MenuItem>\n            <MenuItem value=\"Seletion Sort\">Selection Sort</MenuItem>\n            <MenuItem value=\"Quick Sort\">Quick Sort</MenuItem>\n          </Select>\n        </div>\n        <Button variant=\"contained\" size=\"small\" onClick={handleSort} disabled={isSorting}>Sort!</Button>\n      </div>\n      {/* </div> */}\n    </AppBar >\n    // </div >\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport VizContainer from './SortingVisualizer/VizContainer'\nimport Header from './Header/header';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <VizContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nexport default createStore(reducer);\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}